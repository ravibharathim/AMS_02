@model AMSUtilities.Models.QuotationModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "Quotation", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-sm-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Update Quotation</h3>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(q => q.ID)
                                @Html.HiddenFor(q => q.QuotationStatusID)
                                @Html.HiddenFor(q => q.AssetRequestID)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.VendorName, htmlAttributes: new { @class = "control-label col-md-12" })
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                @Html.DropDownListFor(model => model.VendorID, Model.Vendorddl,  new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.VendorID, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.QuotationFilePath, htmlAttributes: new { @class = "control-label col-md-12" })
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                @Html.TextBoxFor(m => m.QuotationFile, new { type = "file" })
                                @Html.ValidationMessageFor(model => model.QuotationFile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.QuotationReceivedDate, htmlAttributes: new { @class = "control-label col-md-12" })
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                <div class='input-group date'>
                                    @Html.TextBoxFor(model => model.QuotationReceivedDate, DateTime.Now.ToString("MM/dd/yyyy"), new { @id = "QuotationReceivedDate", @class = "form-control datePicker" })
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.QuotationReceivedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-7" align="right">
                            <input type="submit" value="Create" class="btn btn-primary" />
                            <input type="button" value="Cancel" class="btn btn-primary" onclick='window.location.href = "@Url.Action("ManageQuotation", "Quotation", routeValues: null)"' />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")

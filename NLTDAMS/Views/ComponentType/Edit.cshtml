@model AMSUtilities.Models.ComponentTypeModel

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-sm-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Update Component Type</h3>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-12" })
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.AssetCategoryName, htmlAttributes: new { @class = "control-label col-md-12" })
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                @Html.DropDownListFor(model => model.AssetCategoryId, Model.AssetCategories, new { @onchange = "setAssetTypes(this.value)", @id = "assetCategory", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AssetCategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.AssetTypeName, htmlAttributes: new { @class = "control-label col-md-12" })
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                @Html.DropDownListFor(model => model.AssetTypeID, Model.AssetTypes, new { @id = "assetType", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AssetTypeID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-12" })
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                @Html.CheckBoxFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Mandatory, htmlAttributes: new { @class = "control-label col-md-12" })
                            </div>
                        </div>
                        <div class="col-sm-5">
                            <div class="form-group">
                                @Html.CheckBoxFor(model => model.Mandatory)
                                @Html.ValidationMessageFor(model => model.Mandatory, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-7" align="right">
                            <input type="submit" value="Update" class="btn btn-primary" />
                            <input type="button" value="Cancel" class="btn btn-primary" onclick='window.location.href = "@Url.Action("List", "ComponentType", routeValues: null)"' />
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
<script>
    //document.forms[0].submit();
    function setAssetTypes(assetCategoryId) {
         $.ajax({
        url: '@Url.Action("SetAssetTypes","ComponentType")',
             type: 'POST',
             data: { assetCategoryId: assetCategoryId },
              success: function(result) {
                 if(result!="Error" && result!="0" && result!=""){
                     var sel = $('#assetType');
                     sel.empty();
                     $.each(result, function (key, value) {
                         sel.append($("<option></option>").val(value.Value).html(value.Text));
                });
                }
                },
                failure: function(response) {
                    alert(response.responseText);
                },
                error: function(response) {
                    alert(response.responseText);
                }
        });

    }
</script>
